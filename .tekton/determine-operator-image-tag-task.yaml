apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: determine-operator-image-tag
  namespace: rh-acs-tenant
spec:
  description: Determines operator image tag.
  params:
  - name: SOURCE_ARTIFACT
    description: The Trusted Artifact URI pointing to the artifact with
      the application source code. This should be the result of the git-clone task,
      results from other tasks might fail as dirty.
    type: string
  results:
  - name: OPERATOR_IMAGE_TAG
    description: Tag of the operator image.
  volumes:
  - name: workdir
    emptyDir: { }
  stepTemplate:
    volumeMounts:
    - mountPath: /var/workdir
      name: workdir
  steps:
  - name: use-trusted-artifact
    image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:a390d28f69d61ab38aadf78b7c9b21ed09b79687bddae4cf1d02616bef5d7da7
    args:
    - use
    - $(params.SOURCE_ARTIFACT)=/var/workdir/source
  - name: determine-operator-image-tag
    # plain ubi images don't seem to be sufficient for the script below.
    image: brew.registry.redhat.io/rh-osbs/openshift-golang-builder:rhel_9_1.22
    workingDir: /var/workdir/source
    script: |
      #!/usr/bin/env bash
      set -euo pipefail
      # This is essentially replicating what we use at the top of konflux.bundle.Dockerfile.
      cat >/etc/yum.repos.d/ubi.repo <<EOF
      [ubi-8-baseos-rpms]
      name = Red Hat Universal Base Image 8 (RPMs) - BaseOS
      baseurl = https://cdn-ubi.redhat.com/content/public/ubi/dist/ubi8/8/\$basearch/baseos/os
      enabled = 1
      gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
      gpgcheck = 1
      [ubi-8-appstream-rpms]
      name = Red Hat Universal Base Image 8 (RPMs) - AppStream
      baseurl = https://cdn-ubi.redhat.com/content/public/ubi/dist/ubi8/8/\$basearch/appstream/os
      enabled = 1
      gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
      gpgcheck = 1
      EOF
      dnf -y upgrade --nobest && dnf -y install --nodocs --noplugins jq
      unset VERSION
      export GOFLAGS=""
      export GO111MODULE=on
      candidate_version=$(make -C operator/ operator-version-for-bundle | grep '^CANDIDATE_VERSION=' | sed -e 's/^CANDIDATE_VERSION=//;')
      echo -n "${candidate_version}" | tee "$(results.OPERATOR_IMAGE_TAG.path)"
